# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start MySQL
        run : sudo service mysql start

      - name: Create Database from script
        run: mysql -u${{ secrets.DB_USER }} -p${{ secrets.DB_PASSWORD }} -e "source script/sparadrap.sql"
      
      - name: Set up JDK 17
      # v4 node.js runtime v20
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64
          # met en cache les dépendances de maven
          cache: maven

      - name: Build with Maven
        run: mvn -B package

      - name: Copy Jar in staging  
        run: mkdir staging && cp target/*.jar staging

      # permet de charger un artefact
      #- name: Charging artefact
      #  uses: actions/upload-artifact@v4
      #  with:
      #   name: Package
      #    path: staging
      - run: echo "🍏 This job's status is ${{ job.status }}."