# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      DB_NAME: sparadrap
      DB_USER: root
      DB_PASSWORD: root

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_DATABASE: ${{ env.DB_NAME }}
          MYSQL_USER: ${{ env.DB_USER }}
          MYSQL_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 3306:3306

    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Database MySQL
        run: mysql -e 'CREATE DATABASE IF NOT EXISTS ${{ env.DB_NAME }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}

      - name: Start MySQL
        run: mysql --host=127.0.0.1 --user=${{ env.DB_USER }} --password=${{ env.DB_PASSWORD }} ${{ env.DB_NAME }}

      - name: Set up JDK 17
      # v4 node.js runtime v20
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64
          # met en cache les d√©pendances de maven
          cache: maven

      - name: Build with Maven
        run: mvn -B package

      - name: Copy Jar in staging  
        - run: mkdir staging && cp target/*.jar staging

      # permet de charger un artefact
      #- name: Charging artefact
      #  uses: actions/upload-artifact@v4
      #  with:
      #   name: Package
      #    path: staging
        - run: echo "üçè This job's status is ${{ job.status }}."

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
